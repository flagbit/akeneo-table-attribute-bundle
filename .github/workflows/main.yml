on:
  - "push"
  - "pull_request"

jobs:
  build:
    runs-on: "ubuntu-18.04"
    strategy:
      matrix:
        php-versions: ['7.4']

    steps:
      - uses: "actions/checkout@v2.0.0"
      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v1.0.3"
        with:
          path: "~/.composer/cache"
          key: "composer-${{ matrix.php-version }}-${{ hashFiles('composer.json') }}"
          restore-keys: "composer-${{ matrix.php-version }}-"

      - name: "Setup PHP Action"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "intl, xdebug, imagick, apcu"

      - name: "Install PHP dependencies"
        run: "composer install --prefer-dist --no-interaction --optimize-autoloader --no-suggest --no-progress"

      - name: "Linting"
        run: "vendor/bin/phplint ./src"
      - name: "Code Sniffer"
        run: "vendor/bin/phpcs -d memory_limit=-1 --standard=PSR2 --extensions=php ./src"
      - name: "PHPSpec"
        run: "vendor/bin/phpspec run"
      - name: "Integration tests"
        run: "vendor/bin/phpunit"

  frontend:
    runs-on: "ubuntu-18.04"
    strategy:
      matrix:
        php-versions: [ '7.4' ]

    steps:
      - uses: "actions/checkout@v2.0.0"

      - name: "Setup PHP Action"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "intl, xdebug, imagick, apcu"

      - name: "Install PHP dependencies"
        run: "composer install --prefer-dist --no-interaction --optimize-autoloader --no-suggest --no-progress"

      - name: "yarn install"
        uses: "borales/actions-yarn@v2.0.0"
        with:
          cmd: "install"

      - name: "Run frontend tests"
        run: "yarn run test"
